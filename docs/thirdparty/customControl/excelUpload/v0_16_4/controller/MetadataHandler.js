"use strict";sap.ui.define([],function(){class e{constructor(e){this.excelUploadController=e}createLabelListV2(e,o,t){let l={};const a=t.property;const n=t["sap:label"];if(!this.excelUploadController.component.getExcelFileName()&&n){this.excelUploadController.component.setExcelFileName(`${n}.xlsx`)}else if(!this.excelUploadController.component.getExcelFileName()&&!n){this.excelUploadController.component.setExcelFileName(`Template.xlsx`)}if(e.length>0){for(const o of e){const e=a.find(e=>e.name===o);if(e){l[o]={};l[o].label=this._getLabelV2(t,a,e,o,this._options);if(!l[o].label){l[o].label=o}l[o].type=e["type"]}else{}}}else{for(const e of a){let o=false;try{o=e["com.sap.vocabularies.UI.v1.Hidden"].Bool==="true"}catch(e){}if(!o){const o=e.name;l[o]={};l[o].label=this._getLabelV2(t,a,e,o,this._options);l[o].type=e["type"]}}}return l}_getLabelV2(e,o,t,l,a){if(t["sap:label"]){return t["sap:label"]}try{const o=e["com.sap.vocabularies.UI.v1.LineItem"];return o.find(e=>e.Value.Path===l).Label.String}catch(e){}return l}createLabelListV4(e,o){let t={};let l;var a=this.excelUploadController.context.getModel().getMetaModel().getData()["$Annotations"];const n=this.excelUploadController.context.getModel().getMetaModel().getData()[o];try{l=a[o]["@com.sap.vocabularies.UI.v1.Facets"][0].Label}catch(e){}if(!this.excelUploadController.component.getExcelFileName()&&l){this.excelUploadController.component.setExcelFileName(`${l}.xlsx`)}else if(!this.excelUploadController.component.getExcelFileName()&&!l){this.excelUploadController.component.setExcelFileName(`Template.xlsx`)}if(e.length>0){for(const l of e){const e=n[l];if(e){const s=a[`${o}/${l}`];t[l]={};t[l].label=this._getLabelV4(a,n,l,s,this._options,o);if(!t[l].label){t[l].label=l}t[l].type=e.$Type}else{}}}else{const e=Object.entries(n).filter(e=>{let[o,t]=e;return t["$kind"]==="Property"});for(const[l,s]of e){const e=a[`${o}/${l}`];if(!e["@com.sap.vocabularies.UI.v1.Hidden"]){t[l]={};t[l].label=this._getLabelV4(a,n,l,e,this._options,o);if(!t[l].label){t[l].label=l}t[l].type=s.$Type}}}return t}_getLabelV4(e,o,t,l,a,n){if(l&&l["@com.sap.vocabularies.Common.v1.Label"]){return l["@com.sap.vocabularies.Common.v1.Label"]}try{const o=e[n]["@com.sap.vocabularies.UI.v1.LineItem"];return o.find(e=>e.Value.$Path===t).Label}catch(e){}return t}getKeyListV4(e){let o=[];var t=this.excelUploadController.context.getModel().getMetaModel().getData()["$Annotations"];const l=this.excelUploadController.context.getModel().getMetaModel().getData()[e];const a=Object.entries(l).filter(e=>{let[o,t]=e;return t["$kind"]==="Property"});for(const[l,n]of a){const a=t[`${e}/${l}`];if(!a){continue}if(a["@com.sap.vocabularies.Common.v1.FieldControl"]&&a["@com.sap.vocabularies.Common.v1.FieldControl"]["$EnumMember"]&&a["@com.sap.vocabularies.Common.v1.FieldControl"]["$EnumMember"]==="com.sap.vocabularies.Common.v1.FieldControlType/Mandatory"){o.push(l)}if(!a["@com.sap.vocabularies.UI.v1.Hidden"]&&n["$Nullable"]===false){o.push(l)}}return o}getKeyListV2(e){let o=[];for(const t of e.property){const e=t.name;if(t["com.sap.vocabularies.Common.v1.FieldControl"]&&t["com.sap.vocabularies.Common.v1.FieldControl"]["EnumMember"]&&t["com.sap.vocabularies.Common.v1.FieldControl"]["EnumMember"]==="com.sap.vocabularies.Common.v1.FieldControlType/Mandatory"){o.push(e)}if(t["com.sap.vocabularies.UI.v1.Hidden"]&&t["com.sap.vocabularies.UI.v1.Hidden"]["Bool"]==="false"&&t.nullable==="false"){o.push(e)}}return o}}return e});
//# sourceMappingURL=MetadataHandler.js.map